% load "parameters.rb"
% inst_file = "tests/test_top.dat"
% data_file = "tests/mem_data.dat"
% max_step = 20

`timescale 1ns/1ps

module test_top();
`include "parameters.vh"

  /*AUTOREGINPUT*/

  /*AUTOWIRE*/

  //clock
  always
  begin
    clk = 0;
    #(STEP/2);
    clk = 1;
    #(STEP/2);
  end

  //flow
  integer i;
  initial
  begin
    xrst = 0;
    soft_reset = 0;
    clear_mems;
    #(STEP);

    xrst = 1;
    soft_reset = 1;
    init_mem_inst;
    init_mem_data;
    #(STEP);

    soft_reset = 0;
    for (i=0; i<<%=max_step%>; i=i+1) #(STEP);

    soft_reset = 1;
    #(STEP*2);

    dump_mem_data;
    $finish();
  end

  top dut0(/*AUTOINST*/);

  task clear_mems;
    integer i;
    begin // {{{
      for (i=0; i<2**ISIZE; i=i+1)
        dut0.mem_inst.mem[i] = {DWIDTH{1'b0}};
      for (i=0; i<2**DSIZE; i=i+1)
        dut0.mem_data.mem[i] = {DWIDTH{1'b0}};
    end // }}}
  endtask

  task init_mem_inst;
    begin // {{{
      $readmemb("<%=inst_file%>", dut0.mem_inst.mem);
    end // }}}
  endtask

  task init_mem_data;
    begin // {{{
      $readmemh("<%=data_file%>", dut0.mem_data.mem);
    end // }}}
  endtask

  task dump_mem_data;
    integer fd;
    integer i;
    begin // {{{
      fd = $fopen("mem_data_test.dat", "w");
      for (i=0; i<2**DSIZE; i=i+1)
        $fdisplay(fd, "%0d", dut0.mem_data.mem[i]);
      $fclose(fd);
    end // }}}
  endtask

  //display
  always
  begin
    #(STEP/2-1);
    $display(
      "%3d: ", $time/STEP,
      "%3d ", dut0.inst_addr,
      "%3d ", dut0.pcounter.soft_reset,
      "| ",
      "%2x ", dut0.inst[31:26],
      "%2d ", dut0.inst[25:21],
      "%2d ", dut0.inst[20:16],
      "%2d ", dut0.inst[15:11],
      "%2d ", dut0.inst[10:6],
      "%2x ", dut0.inst[5:0],
      "| ",
      "%3d ", dut0.reg_file.file[8],
      "%3d ", dut0.reg_file.file[9],
      "%3d ", dut0.reg_file.file[10],
      "%3d ", dut0.reg_file.file[11],
      "%3d ", dut0.reg_file.file[12],
      "%3d ", dut0.reg_file.file[13],
      "%3d ", dut0.reg_file.file[14],
      "%3d ", dut0.reg_file.file[15],
      "| ",
      "%3d ", dut0.mem_data.mem[0],
      "%3d ", dut0.mem_data.mem[1],
      "%3d ", dut0.mem_data.mem[2],
      "%3d ", dut0.mem_data.mem[3],
      "%3d ", dut0.mem_data.mem[4],
      "%3d ", dut0.mem_data.mem[5],
      "%3d ", dut0.mem_data.mem[6],
      "%3d ", dut0.mem_data.mem[7],
      "| ",
      "%1d ", dut0.reg_write,
      "%3d ", dut0.write_reg,
      "%3d ", dut0.reg_data,
      "%1d ", dut0.mem_write,
      "%3d ", dut0.alu_result,
      "%3d ", dut0.data2,
      "|"
    );
    #(STEP/2+1);
  end

endmodule

// Local Variables:
// verilog-library-directories:("." "..")
// End:
