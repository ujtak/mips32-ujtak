% load "parameters.rb"

`timescale 1ns/1ps

module test_ctrl();
`include "parameters.vh"
`include "alu.vh"
`include "opcode.vh"

  /*AUTOREGINPUT*/

  /*AUTOWIRE*/

  //clock
  always
  begin
    clk = 0;
    #(STEP/2);
    clk = 1;
    #(STEP/2);
  end

  //flow
  initial
  begin
    xrst = 0;
    #(STEP);

    xrst = 1;
    #(STEP);

    opcode = OP_R;
    #(STEP*10);

    opcode = OP_LW;
    #(STEP*10);

    opcode = OP_SW;
    #(STEP*10);

    opcode = OP_BEQ;
    #(STEP*10);

    $finish();
  end

  ctrl dut0(/*AUTOINST*/);

  //display
  always
  begin
    #(STEP/2-1);
    $display(
      "%d: ", $time/STEP,
      "| ",
      "%d ", xrst,
      "%d ", opcode,
      "| ",
      "%d ", alu_op,
      "%d ", alu_src,
      "%d ", branch,
      "%d ", mem_read,
      "%d ", mem_to_reg,
      "%d ", mem_write,
      "%d ", reg_dst,
      "%d ", reg_write,
      "| ",
      "%b ", dut0.ctrl_inst,
    );
    #(STEP/2+1);
  end

endmodule

// Local Variables:
// verilog-library-directories:("." "..")
// End:
